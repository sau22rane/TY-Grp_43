Terminals unused in grammar

   STRUCT
   EXTDEFS
   PARAS
   STMTS
   DEFS
   DECS
   ARGS
   INIT_ARGS


State 196 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | extdefs

    3 extdefs: extdef
    4        | extdefs extdef

    5 extdef: def
    6       | INT func compound_stmt
    7       | FLOAT func compound_stmt
    8       | CHAR func compound_stmt

    9 func: IDENTIFIER '(' paras ')'
   10     | IDENTIFIER '(' ')'

   11 paras: para
   12      | paras ',' para

   13 para: INT var

   14 var: IDENTIFIER
   15    | var '[' CONSTANT ']'

   16 stmts: stmt
   17      | stmts stmt

   18 stmt: compound_stmt
   19     | expr_stmt
   20     | selection_stmt
   21     | iteration_stmt
   22     | while_stmt
   23     | jump_stmt

   24 compound_stmt: '{' defs stmts '}'
   25              | '{' defs '}'
   26              | '{' stmts '}'
   27              | '{' '}'
   28              | ';'

   29 expr_stmt: expr ';'

   30 selection_stmt: IF '(' expr ')' stmt
   31               | IF '(' expr ')' stmt ELSE stmt

   32 iteration_stmt: FOR '(' expr ';' expr ';' expr ')' stmt
   33               | FOR '(' expr ';' expr ';' ')' stmt
   34               | FOR '(' expr ';' ';' expr ')' stmt
   35               | FOR '(' expr ';' ';' ')' stmt
   36               | FOR '(' ';' expr ';' expr ')' stmt
   37               | FOR '(' ';' expr ';' ')' stmt
   38               | FOR '(' ';' ';' expr ')' stmt
   39               | FOR '(' ';' ';' ')' stmt

   40 while_stmt: WHILE '(' expr ')' stmt

   41 jump_stmt: RETURN expr ';'
   42          | CONTINUE ';'
   43          | BREAK ';'

   44 defs: def
   45     | defs def

   46 def: INT decs ';'

   47 decs: dec
   48     | decs ',' dec

   49 dec: var
   50    | var '=' init

   51 init: expr
   52     | '{' init_args '}'

   53 expr: assignment
   54     | READ '(' expr ')'

   55 assignment: logical_or
   56           | unary '=' assignment
   57           | unary ADD_ASSIGN assignment
   58           | unary SUB_ASSIGN assignment
   59           | unary MUL_ASSIGN assignment
   60           | unary DIV_ASSIGN assignment
   61           | unary MOD_ASSIGN assignment
   62           | unary AND_ASSIGN assignment
   63           | unary XOR_ASSIGN assignment
   64           | unary OR_ASSIGN assignment
   65           | unary SHL_ASSIGN assignment
   66           | unary SHR_ASSIGN assignment

   67 logical_or: logical_and
   68           | logical_or OR_OP logical_and

   69 logical_and: bit_or
   70            | logical_and AND_OP bit_or

   71 bit_or: bit_xor
   72       | bit_or '|' bit_xor

   73 bit_xor: bit_and
   74        | bit_xor '^' bit_and

   75 bit_and: equality
   76        | bit_and '&' equality

   77 equality: relational
   78         | equality EQ_OP relational
   79         | equality NE_OP relational

   80 relational: shift
   81           | relational '>' shift
   82           | relational GE_OP shift
   83           | relational '<' shift
   84           | relational LE_OP shift

   85 shift: additive
   86      | shift SHL_OP additive
   87      | shift SHR_OP additive

   88 additive: multi
   89         | additive '+' multi
   90         | additive '-' multi

   91 multi: unary
   92      | multi '*' unary
   93      | multi '/' unary
   94      | multi '%' unary

   95 unary: postfix
   96      | INC_OP unary
   97      | DEC_OP unary
   98      | '-' unary
   99      | '!' unary
  100      | '~' unary

  101 postfix: primary
  102        | postfix INC_OP
  103        | postfix DEC_OP
  104        | postfix '[' expr ']'
  105        | postfix '(' args ')'
  106        | postfix '(' ')'
  107        | postfix '.' IDENTIFIER

  108 primary: IDENTIFIER
  109        | CONSTANT
  110        | '(' expr ')'

  111 args: expr
  112     | args ',' expr

  113 init_args: init_arg
  114          | init_args ',' init_arg

  115 init_arg: expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 99
'%' (37) 94
'&' (38) 76
'(' (40) 9 10 30 31 32 33 34 35 36 37 38 39 40 54 105 106 110
')' (41) 9 10 30 31 32 33 34 35 36 37 38 39 40 54 105 106 110
'*' (42) 92
'+' (43) 89
',' (44) 12 48 112 114
'-' (45) 90 98
'.' (46) 107
'/' (47) 93
';' (59) 28 29 32 33 34 35 36 37 38 39 41 42 43 46
'<' (60) 83
'=' (61) 50 56
'>' (62) 81
'[' (91) 15 104
']' (93) 15 104
'^' (94) 74
'{' (123) 24 25 26 27 52
'|' (124) 72
'}' (125) 24 25 26 27 52
'~' (126) 100
error (256)
INC_OP (258) 96 102
DEC_OP (259) 97 103
SHL_OP (260) 86
SHR_OP (261) 87
LE_OP (262) 84
GE_OP (263) 82
EQ_OP (264) 78
NE_OP (265) 79
AND_OP (266) 70
OR_OP (267) 68
ADD_ASSIGN (268) 57
SUB_ASSIGN (269) 58
MUL_ASSIGN (270) 59
DIV_ASSIGN (271) 60
MOD_ASSIGN (272) 61
AND_ASSIGN (273) 62
XOR_ASSIGN (274) 63
OR_ASSIGN (275) 64
SHL_ASSIGN (276) 65
SHR_ASSIGN (277) 66
IDENTIFIER (278) 9 10 14 107 108
CONSTANT (279) 15 109
INT (280) 6 13 46
STRUCT (281)
FLOAT (282) 7
CHAR (283) 8
IF (284) 30 31
ELSE (285) 31
FOR (286) 32 33 34 35 36 37 38 39
CONTINUE (287) 42
BREAK (288) 43
RETURN (289) 41
READ (290) 54
WHILE (291) 40
EXTDEFS (292)
PARAS (293)
STMTS (294)
DEFS (295)
DECS (296)
ARGS (297)
INIT_ARGS (298)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
program (67)
    on left: 1 2, on right: 0
extdefs (68)
    on left: 3 4, on right: 2 4
extdef (69)
    on left: 5 6 7 8, on right: 3 4
func (70)
    on left: 9 10, on right: 6 7 8
paras (71)
    on left: 11 12, on right: 9 12
para (72)
    on left: 13, on right: 11 12
var (73)
    on left: 14 15, on right: 13 15 49 50
stmts (74)
    on left: 16 17, on right: 17 24 26
stmt (75)
    on left: 18 19 20 21 22 23, on right: 16 17 30 31 32 33 34 35 36
    37 38 39 40
compound_stmt (76)
    on left: 24 25 26 27 28, on right: 6 7 8 18
expr_stmt (77)
    on left: 29, on right: 19
selection_stmt (78)
    on left: 30 31, on right: 20
iteration_stmt (79)
    on left: 32 33 34 35 36 37 38 39, on right: 21
while_stmt (80)
    on left: 40, on right: 22
jump_stmt (81)
    on left: 41 42 43, on right: 23
defs (82)
    on left: 44 45, on right: 24 25 45
def (83)
    on left: 46, on right: 5 44 45
decs (84)
    on left: 47 48, on right: 46 48
dec (85)
    on left: 49 50, on right: 47 48
init (86)
    on left: 51 52, on right: 50
expr (87)
    on left: 53 54, on right: 29 30 31 32 33 34 35 36 37 38 40 41 51
    54 104 110 111 112 115
assignment (88)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66, on right: 53 56 57
    58 59 60 61 62 63 64 65 66
logical_or (89)
    on left: 67 68, on right: 55 68
logical_and (90)
    on left: 69 70, on right: 67 68 70
bit_or (91)
    on left: 71 72, on right: 69 70 72
bit_xor (92)
    on left: 73 74, on right: 71 72 74
bit_and (93)
    on left: 75 76, on right: 73 74 76
equality (94)
    on left: 77 78 79, on right: 75 76 78 79
relational (95)
    on left: 80 81 82 83 84, on right: 77 78 79 81 82 83 84
shift (96)
    on left: 85 86 87, on right: 80 81 82 83 84 86 87
additive (97)
    on left: 88 89 90, on right: 85 86 87 89 90
multi (98)
    on left: 91 92 93 94, on right: 88 89 90 92 93 94
unary (99)
    on left: 95 96 97 98 99 100, on right: 56 57 58 59 60 61 62 63
    64 65 66 91 92 93 94 96 97 98 99 100
postfix (100)
    on left: 101 102 103 104 105 106 107, on right: 95 102 103 104
    105 106 107
primary (101)
    on left: 108 109 110, on right: 101
args (102)
    on left: 111 112, on right: 105 112
init_args (103)
    on left: 113 114, on right: 52 114
init_arg (104)
    on left: 115, on right: 113 114


State 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    $default  reduce using rule 1 (program)

    program  go to state 4
    extdefs  go to state 5
    extdef   go to state 6
    def      go to state 7


State 1

    6 extdef: INT . func compound_stmt
   46 def: INT . decs ';'

    IDENTIFIER  shift, and go to state 8

    func  go to state 9
    var   go to state 10
    decs  go to state 11
    dec   go to state 12


State 2

    7 extdef: FLOAT . func compound_stmt

    IDENTIFIER  shift, and go to state 13

    func  go to state 14


State 3

    8 extdef: CHAR . func compound_stmt

    IDENTIFIER  shift, and go to state 13

    func  go to state 15


State 4

    0 $accept: program . $end

    $end  shift, and go to state 16


State 5

    2 program: extdefs .
    4 extdefs: extdefs . extdef

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    $default  reduce using rule 2 (program)

    extdef  go to state 17
    def     go to state 7


State 6

    3 extdefs: extdef .

    $default  reduce using rule 3 (extdefs)


State 7

    5 extdef: def .

    $default  reduce using rule 5 (extdef)


State 8

    9 func: IDENTIFIER . '(' paras ')'
   10     | IDENTIFIER . '(' ')'
   14 var: IDENTIFIER .

    '('  shift, and go to state 18

    $default  reduce using rule 14 (var)


State 9

    6 extdef: INT func . compound_stmt

    '{'  shift, and go to state 19
    ';'  shift, and go to state 20

    compound_stmt  go to state 21


State 10

   15 var: var . '[' CONSTANT ']'
   49 dec: var .
   50    | var . '=' init

    '['  shift, and go to state 22
    '='  shift, and go to state 23

    $default  reduce using rule 49 (dec)


State 11

   46 def: INT decs . ';'
   48 decs: decs . ',' dec

    ','  shift, and go to state 24
    ';'  shift, and go to state 25


State 12

   47 decs: dec .

    $default  reduce using rule 47 (decs)


State 13

    9 func: IDENTIFIER . '(' paras ')'
   10     | IDENTIFIER . '(' ')'

    '('  shift, and go to state 18


State 14

    7 extdef: FLOAT func . compound_stmt

    '{'  shift, and go to state 19
    ';'  shift, and go to state 20

    compound_stmt  go to state 26


State 15

    8 extdef: CHAR func . compound_stmt

    '{'  shift, and go to state 19
    ';'  shift, and go to state 20

    compound_stmt  go to state 27


State 16

    0 $accept: program $end .

    $default  accept


State 17

    4 extdefs: extdefs extdef .

    $default  reduce using rule 4 (extdefs)


State 18

    9 func: IDENTIFIER '(' . paras ')'
   10     | IDENTIFIER '(' . ')'

    INT  shift, and go to state 28
    ')'  shift, and go to state 29

    paras  go to state 30
    para   go to state 31


State 19

   24 compound_stmt: '{' . defs stmts '}'
   25              | '{' . defs '}'
   26              | '{' . stmts '}'
   27              | '{' . '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    INT         shift, and go to state 36
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    '}'         shift, and go to state 45
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmts           go to state 49
    stmt            go to state 50
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    defs            go to state 57
    def             go to state 58
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 20

   28 compound_stmt: ';' .

    $default  reduce using rule 28 (compound_stmt)


State 21

    6 extdef: INT func compound_stmt .

    $default  reduce using rule 6 (extdef)


State 22

   15 var: var '[' . CONSTANT ']'

    CONSTANT  shift, and go to state 74


State 23

   50 dec: var '=' . init

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '{'         shift, and go to state 75
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    init         go to state 76
    expr         go to state 77
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 24

   48 decs: decs ',' . dec

    IDENTIFIER  shift, and go to state 78

    var  go to state 10
    dec  go to state 79


State 25

   46 def: INT decs ';' .

    $default  reduce using rule 46 (def)


State 26

    7 extdef: FLOAT func compound_stmt .

    $default  reduce using rule 7 (extdef)


State 27

    8 extdef: CHAR func compound_stmt .

    $default  reduce using rule 8 (extdef)


State 28

   13 para: INT . var

    IDENTIFIER  shift, and go to state 78

    var  go to state 80


State 29

   10 func: IDENTIFIER '(' ')' .

    $default  reduce using rule 10 (func)


State 30

    9 func: IDENTIFIER '(' paras . ')'
   12 paras: paras . ',' para

    ')'  shift, and go to state 81
    ','  shift, and go to state 82


State 31

   11 paras: para .

    $default  reduce using rule 11 (paras)


State 32

   96 unary: INC_OP . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 83
    postfix  go to state 72
    primary  go to state 73


State 33

   97 unary: DEC_OP . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 84
    postfix  go to state 72
    primary  go to state 73


State 34

  108 primary: IDENTIFIER .

    $default  reduce using rule 108 (primary)


State 35

  109 primary: CONSTANT .

    $default  reduce using rule 109 (primary)


State 36

   46 def: INT . decs ';'

    IDENTIFIER  shift, and go to state 78

    var   go to state 10
    decs  go to state 11
    dec   go to state 12


State 37

   30 selection_stmt: IF . '(' expr ')' stmt
   31               | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 85


State 38

   32 iteration_stmt: FOR . '(' expr ';' expr ';' expr ')' stmt
   33               | FOR . '(' expr ';' expr ';' ')' stmt
   34               | FOR . '(' expr ';' ';' expr ')' stmt
   35               | FOR . '(' expr ';' ';' ')' stmt
   36               | FOR . '(' ';' expr ';' expr ')' stmt
   37               | FOR . '(' ';' expr ';' ')' stmt
   38               | FOR . '(' ';' ';' expr ')' stmt
   39               | FOR . '(' ';' ';' ')' stmt

    '('  shift, and go to state 86


State 39

   42 jump_stmt: CONTINUE . ';'

    ';'  shift, and go to state 87


State 40

   43 jump_stmt: BREAK . ';'

    ';'  shift, and go to state 88


State 41

   41 jump_stmt: RETURN . expr ';'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 89
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 42

   54 expr: READ . '(' expr ')'

    '('  shift, and go to state 90


State 43

   40 while_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 91


State 44

  110 primary: '(' . expr ')'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 92
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 45

   27 compound_stmt: '{' '}' .

    $default  reduce using rule 27 (compound_stmt)


State 46

   98 unary: '-' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 93
    postfix  go to state 72
    primary  go to state 73


State 47

   99 unary: '!' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 94
    postfix  go to state 72
    primary  go to state 73


State 48

  100 unary: '~' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 95
    postfix  go to state 72
    primary  go to state 73


State 49

   17 stmts: stmts . stmt
   26 compound_stmt: '{' stmts . '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    '}'         shift, and go to state 96
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 97
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 50

   16 stmts: stmt .

    $default  reduce using rule 16 (stmts)


State 51

   18 stmt: compound_stmt .

    $default  reduce using rule 18 (stmt)


State 52

   19 stmt: expr_stmt .

    $default  reduce using rule 19 (stmt)


State 53

   20 stmt: selection_stmt .

    $default  reduce using rule 20 (stmt)


State 54

   21 stmt: iteration_stmt .

    $default  reduce using rule 21 (stmt)


State 55

   22 stmt: while_stmt .

    $default  reduce using rule 22 (stmt)


State 56

   23 stmt: jump_stmt .

    $default  reduce using rule 23 (stmt)


State 57

   24 compound_stmt: '{' defs . stmts '}'
   25              | '{' defs . '}'
   45 defs: defs . def

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    INT         shift, and go to state 36
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    '}'         shift, and go to state 98
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmts           go to state 99
    stmt            go to state 50
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    def             go to state 100
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 58

   44 defs: def .

    $default  reduce using rule 44 (defs)


State 59

   29 expr_stmt: expr . ';'

    ';'  shift, and go to state 101


State 60

   53 expr: assignment .

    $default  reduce using rule 53 (expr)


State 61

   55 assignment: logical_or .
   68 logical_or: logical_or . OR_OP logical_and

    OR_OP  shift, and go to state 102

    $default  reduce using rule 55 (assignment)


State 62

   67 logical_or: logical_and .
   70 logical_and: logical_and . AND_OP bit_or

    AND_OP  shift, and go to state 103

    $default  reduce using rule 67 (logical_or)


State 63

   69 logical_and: bit_or .
   72 bit_or: bit_or . '|' bit_xor

    '|'  shift, and go to state 104

    $default  reduce using rule 69 (logical_and)


State 64

   71 bit_or: bit_xor .
   74 bit_xor: bit_xor . '^' bit_and

    '^'  shift, and go to state 105

    $default  reduce using rule 71 (bit_or)


State 65

   73 bit_xor: bit_and .
   76 bit_and: bit_and . '&' equality

    '&'  shift, and go to state 106

    $default  reduce using rule 73 (bit_xor)


State 66

   75 bit_and: equality .
   78 equality: equality . EQ_OP relational
   79         | equality . NE_OP relational

    EQ_OP  shift, and go to state 107
    NE_OP  shift, and go to state 108

    $default  reduce using rule 75 (bit_and)


State 67

   77 equality: relational .
   81 relational: relational . '>' shift
   82           | relational . GE_OP shift
   83           | relational . '<' shift
   84           | relational . LE_OP shift

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '>'    shift, and go to state 111
    '<'    shift, and go to state 112

    $default  reduce using rule 77 (equality)


State 68

   80 relational: shift .
   86 shift: shift . SHL_OP additive
   87      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 113
    SHR_OP  shift, and go to state 114

    $default  reduce using rule 80 (relational)


State 69

   85 shift: additive .
   89 additive: additive . '+' multi
   90         | additive . '-' multi

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 85 (shift)


State 70

   88 additive: multi .
   92 multi: multi . '*' unary
   93      | multi . '/' unary
   94      | multi . '%' unary

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 88 (additive)


State 71

   56 assignment: unary . '=' assignment
   57           | unary . ADD_ASSIGN assignment
   58           | unary . SUB_ASSIGN assignment
   59           | unary . MUL_ASSIGN assignment
   60           | unary . DIV_ASSIGN assignment
   61           | unary . MOD_ASSIGN assignment
   62           | unary . AND_ASSIGN assignment
   63           | unary . XOR_ASSIGN assignment
   64           | unary . OR_ASSIGN assignment
   65           | unary . SHL_ASSIGN assignment
   66           | unary . SHR_ASSIGN assignment
   91 multi: unary .

    ADD_ASSIGN  shift, and go to state 120
    SUB_ASSIGN  shift, and go to state 121
    MUL_ASSIGN  shift, and go to state 122
    DIV_ASSIGN  shift, and go to state 123
    MOD_ASSIGN  shift, and go to state 124
    AND_ASSIGN  shift, and go to state 125
    XOR_ASSIGN  shift, and go to state 126
    OR_ASSIGN   shift, and go to state 127
    SHL_ASSIGN  shift, and go to state 128
    SHR_ASSIGN  shift, and go to state 129
    '='         shift, and go to state 130

    $default  reduce using rule 91 (multi)


State 72

   95 unary: postfix .
  102 postfix: postfix . INC_OP
  103        | postfix . DEC_OP
  104        | postfix . '[' expr ']'
  105        | postfix . '(' args ')'
  106        | postfix . '(' ')'
  107        | postfix . '.' IDENTIFIER

    INC_OP  shift, and go to state 131
    DEC_OP  shift, and go to state 132
    '('     shift, and go to state 133
    '['     shift, and go to state 134
    '.'     shift, and go to state 135

    $default  reduce using rule 95 (unary)


State 73

  101 postfix: primary .

    $default  reduce using rule 101 (postfix)


State 74

   15 var: var '[' CONSTANT . ']'

    ']'  shift, and go to state 136


State 75

   52 init: '{' . init_args '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 137
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73
    init_args    go to state 138
    init_arg     go to state 139


State 76

   50 dec: var '=' init .

    $default  reduce using rule 50 (dec)


State 77

   51 init: expr .

    $default  reduce using rule 51 (init)


State 78

   14 var: IDENTIFIER .

    $default  reduce using rule 14 (var)


State 79

   48 decs: decs ',' dec .

    $default  reduce using rule 48 (decs)


State 80

   13 para: INT var .
   15 var: var . '[' CONSTANT ']'

    '['  shift, and go to state 22

    $default  reduce using rule 13 (para)


State 81

    9 func: IDENTIFIER '(' paras ')' .

    $default  reduce using rule 9 (func)


State 82

   12 paras: paras ',' . para

    INT  shift, and go to state 28

    para  go to state 140


State 83

   96 unary: INC_OP unary .

    $default  reduce using rule 96 (unary)


State 84

   97 unary: DEC_OP unary .

    $default  reduce using rule 97 (unary)


State 85

   30 selection_stmt: IF '(' . expr ')' stmt
   31               | IF '(' . expr ')' stmt ELSE stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 141
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 86

   32 iteration_stmt: FOR '(' . expr ';' expr ';' expr ')' stmt
   33               | FOR '(' . expr ';' expr ';' ')' stmt
   34               | FOR '(' . expr ';' ';' expr ')' stmt
   35               | FOR '(' . expr ';' ';' ')' stmt
   36               | FOR '(' . ';' expr ';' expr ')' stmt
   37               | FOR '(' . ';' expr ';' ')' stmt
   38               | FOR '(' . ';' ';' expr ')' stmt
   39               | FOR '(' . ';' ';' ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ';'         shift, and go to state 142
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 143
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 87

   42 jump_stmt: CONTINUE ';' .

    $default  reduce using rule 42 (jump_stmt)


State 88

   43 jump_stmt: BREAK ';' .

    $default  reduce using rule 43 (jump_stmt)


State 89

   41 jump_stmt: RETURN expr . ';'

    ';'  shift, and go to state 144


State 90

   54 expr: READ '(' . expr ')'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 145
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 91

   40 while_stmt: WHILE '(' . expr ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 146
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 92

  110 primary: '(' expr . ')'

    ')'  shift, and go to state 147


State 93

   98 unary: '-' unary .

    $default  reduce using rule 98 (unary)


State 94

   99 unary: '!' unary .

    $default  reduce using rule 99 (unary)


State 95

  100 unary: '~' unary .

    $default  reduce using rule 100 (unary)


State 96

   26 compound_stmt: '{' stmts '}' .

    $default  reduce using rule 26 (compound_stmt)


State 97

   17 stmts: stmts stmt .

    $default  reduce using rule 17 (stmts)


State 98

   25 compound_stmt: '{' defs '}' .

    $default  reduce using rule 25 (compound_stmt)


State 99

   17 stmts: stmts . stmt
   24 compound_stmt: '{' defs stmts . '}'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    '}'         shift, and go to state 148
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 97
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 100

   45 defs: defs def .

    $default  reduce using rule 45 (defs)


State 101

   29 expr_stmt: expr ';' .

    $default  reduce using rule 29 (expr_stmt)


State 102

   68 logical_or: logical_or OR_OP . logical_and

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    logical_and  go to state 149
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 150
    postfix      go to state 72
    primary      go to state 73


State 103

   70 logical_and: logical_and AND_OP . bit_or

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    bit_or      go to state 151
    bit_xor     go to state 64
    bit_and     go to state 65
    equality    go to state 66
    relational  go to state 67
    shift       go to state 68
    additive    go to state 69
    multi       go to state 70
    unary       go to state 150
    postfix     go to state 72
    primary     go to state 73


State 104

   72 bit_or: bit_or '|' . bit_xor

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    bit_xor     go to state 152
    bit_and     go to state 65
    equality    go to state 66
    relational  go to state 67
    shift       go to state 68
    additive    go to state 69
    multi       go to state 70
    unary       go to state 150
    postfix     go to state 72
    primary     go to state 73


State 105

   74 bit_xor: bit_xor '^' . bit_and

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    bit_and     go to state 153
    equality    go to state 66
    relational  go to state 67
    shift       go to state 68
    additive    go to state 69
    multi       go to state 70
    unary       go to state 150
    postfix     go to state 72
    primary     go to state 73


State 106

   76 bit_and: bit_and '&' . equality

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    equality    go to state 154
    relational  go to state 67
    shift       go to state 68
    additive    go to state 69
    multi       go to state 70
    unary       go to state 150
    postfix     go to state 72
    primary     go to state 73


State 107

   78 equality: equality EQ_OP . relational

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    relational  go to state 155
    shift       go to state 68
    additive    go to state 69
    multi       go to state 70
    unary       go to state 150
    postfix     go to state 72
    primary     go to state 73


State 108

   79 equality: equality NE_OP . relational

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    relational  go to state 156
    shift       go to state 68
    additive    go to state 69
    multi       go to state 70
    unary       go to state 150
    postfix     go to state 72
    primary     go to state 73


State 109

   84 relational: relational LE_OP . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    shift     go to state 157
    additive  go to state 69
    multi     go to state 70
    unary     go to state 150
    postfix   go to state 72
    primary   go to state 73


State 110

   82 relational: relational GE_OP . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    shift     go to state 158
    additive  go to state 69
    multi     go to state 70
    unary     go to state 150
    postfix   go to state 72
    primary   go to state 73


State 111

   81 relational: relational '>' . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    shift     go to state 159
    additive  go to state 69
    multi     go to state 70
    unary     go to state 150
    postfix   go to state 72
    primary   go to state 73


State 112

   83 relational: relational '<' . shift

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    shift     go to state 160
    additive  go to state 69
    multi     go to state 70
    unary     go to state 150
    postfix   go to state 72
    primary   go to state 73


State 113

   86 shift: shift SHL_OP . additive

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    additive  go to state 161
    multi     go to state 70
    unary     go to state 150
    postfix   go to state 72
    primary   go to state 73


State 114

   87 shift: shift SHR_OP . additive

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    additive  go to state 162
    multi     go to state 70
    unary     go to state 150
    postfix   go to state 72
    primary   go to state 73


State 115

   89 additive: additive '+' . multi

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    multi    go to state 163
    unary    go to state 150
    postfix  go to state 72
    primary  go to state 73


State 116

   90 additive: additive '-' . multi

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    multi    go to state 164
    unary    go to state 150
    postfix  go to state 72
    primary  go to state 73


State 117

   92 multi: multi '*' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 165
    postfix  go to state 72
    primary  go to state 73


State 118

   93 multi: multi '/' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 166
    postfix  go to state 72
    primary  go to state 73


State 119

   94 multi: multi '%' . unary

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    unary    go to state 167
    postfix  go to state 72
    primary  go to state 73


State 120

   57 assignment: unary ADD_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 168
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 121

   58 assignment: unary SUB_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 169
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 122

   59 assignment: unary MUL_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 170
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 123

   60 assignment: unary DIV_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 171
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 124

   61 assignment: unary MOD_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 172
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 125

   62 assignment: unary AND_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 173
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 126

   63 assignment: unary XOR_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 174
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 127

   64 assignment: unary OR_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 175
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 128

   65 assignment: unary SHL_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 176
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 129

   66 assignment: unary SHR_ASSIGN . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 177
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 130

   56 assignment: unary '=' . assignment

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    assignment   go to state 178
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 131

  102 postfix: postfix INC_OP .

    $default  reduce using rule 102 (postfix)


State 132

  103 postfix: postfix DEC_OP .

    $default  reduce using rule 103 (postfix)


State 133

  105 postfix: postfix '(' . args ')'
  106        | postfix '(' . ')'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ')'         shift, and go to state 179
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 180
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73
    args         go to state 181


State 134

  104 postfix: postfix '[' . expr ']'

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 182
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 135

  107 postfix: postfix '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 183


State 136

   15 var: var '[' CONSTANT ']' .

    $default  reduce using rule 15 (var)


State 137

  115 init_arg: expr .

    $default  reduce using rule 115 (init_arg)


State 138

   52 init: '{' init_args . '}'
  114 init_args: init_args . ',' init_arg

    ','  shift, and go to state 184
    '}'  shift, and go to state 185


State 139

  113 init_args: init_arg .

    $default  reduce using rule 113 (init_args)


State 140

   12 paras: paras ',' para .

    $default  reduce using rule 12 (paras)


State 141

   30 selection_stmt: IF '(' expr . ')' stmt
   31               | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 186


State 142

   36 iteration_stmt: FOR '(' ';' . expr ';' expr ')' stmt
   37               | FOR '(' ';' . expr ';' ')' stmt
   38               | FOR '(' ';' . ';' expr ')' stmt
   39               | FOR '(' ';' . ';' ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ';'         shift, and go to state 187
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 188
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 143

   32 iteration_stmt: FOR '(' expr . ';' expr ';' expr ')' stmt
   33               | FOR '(' expr . ';' expr ';' ')' stmt
   34               | FOR '(' expr . ';' ';' expr ')' stmt
   35               | FOR '(' expr . ';' ';' ')' stmt

    ';'  shift, and go to state 189


State 144

   41 jump_stmt: RETURN expr ';' .

    $default  reduce using rule 41 (jump_stmt)


State 145

   54 expr: READ '(' expr . ')'

    ')'  shift, and go to state 190


State 146

   40 while_stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 191


State 147

  110 primary: '(' expr ')' .

    $default  reduce using rule 110 (primary)


State 148

   24 compound_stmt: '{' defs stmts '}' .

    $default  reduce using rule 24 (compound_stmt)


State 149

   68 logical_or: logical_or OR_OP logical_and .
   70 logical_and: logical_and . AND_OP bit_or

    AND_OP  shift, and go to state 103

    $default  reduce using rule 68 (logical_or)


State 150

   91 multi: unary .

    $default  reduce using rule 91 (multi)


State 151

   70 logical_and: logical_and AND_OP bit_or .
   72 bit_or: bit_or . '|' bit_xor

    '|'  shift, and go to state 104

    $default  reduce using rule 70 (logical_and)


State 152

   72 bit_or: bit_or '|' bit_xor .
   74 bit_xor: bit_xor . '^' bit_and

    '^'  shift, and go to state 105

    $default  reduce using rule 72 (bit_or)


State 153

   74 bit_xor: bit_xor '^' bit_and .
   76 bit_and: bit_and . '&' equality

    '&'  shift, and go to state 106

    $default  reduce using rule 74 (bit_xor)


State 154

   76 bit_and: bit_and '&' equality .
   78 equality: equality . EQ_OP relational
   79         | equality . NE_OP relational

    EQ_OP  shift, and go to state 107
    NE_OP  shift, and go to state 108

    $default  reduce using rule 76 (bit_and)


State 155

   78 equality: equality EQ_OP relational .
   81 relational: relational . '>' shift
   82           | relational . GE_OP shift
   83           | relational . '<' shift
   84           | relational . LE_OP shift

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '>'    shift, and go to state 111
    '<'    shift, and go to state 112

    $default  reduce using rule 78 (equality)


State 156

   79 equality: equality NE_OP relational .
   81 relational: relational . '>' shift
   82           | relational . GE_OP shift
   83           | relational . '<' shift
   84           | relational . LE_OP shift

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '>'    shift, and go to state 111
    '<'    shift, and go to state 112

    $default  reduce using rule 79 (equality)


State 157

   84 relational: relational LE_OP shift .
   86 shift: shift . SHL_OP additive
   87      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 113
    SHR_OP  shift, and go to state 114

    $default  reduce using rule 84 (relational)


State 158

   82 relational: relational GE_OP shift .
   86 shift: shift . SHL_OP additive
   87      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 113
    SHR_OP  shift, and go to state 114

    $default  reduce using rule 82 (relational)


State 159

   81 relational: relational '>' shift .
   86 shift: shift . SHL_OP additive
   87      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 113
    SHR_OP  shift, and go to state 114

    $default  reduce using rule 81 (relational)


State 160

   83 relational: relational '<' shift .
   86 shift: shift . SHL_OP additive
   87      | shift . SHR_OP additive

    SHL_OP  shift, and go to state 113
    SHR_OP  shift, and go to state 114

    $default  reduce using rule 83 (relational)


State 161

   86 shift: shift SHL_OP additive .
   89 additive: additive . '+' multi
   90         | additive . '-' multi

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 86 (shift)


State 162

   87 shift: shift SHR_OP additive .
   89 additive: additive . '+' multi
   90         | additive . '-' multi

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 87 (shift)


State 163

   89 additive: additive '+' multi .
   92 multi: multi . '*' unary
   93      | multi . '/' unary
   94      | multi . '%' unary

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 89 (additive)


State 164

   90 additive: additive '-' multi .
   92 multi: multi . '*' unary
   93      | multi . '/' unary
   94      | multi . '%' unary

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 90 (additive)


State 165

   92 multi: multi '*' unary .

    $default  reduce using rule 92 (multi)


State 166

   93 multi: multi '/' unary .

    $default  reduce using rule 93 (multi)


State 167

   94 multi: multi '%' unary .

    $default  reduce using rule 94 (multi)


State 168

   57 assignment: unary ADD_ASSIGN assignment .

    $default  reduce using rule 57 (assignment)


State 169

   58 assignment: unary SUB_ASSIGN assignment .

    $default  reduce using rule 58 (assignment)


State 170

   59 assignment: unary MUL_ASSIGN assignment .

    $default  reduce using rule 59 (assignment)


State 171

   60 assignment: unary DIV_ASSIGN assignment .

    $default  reduce using rule 60 (assignment)


State 172

   61 assignment: unary MOD_ASSIGN assignment .

    $default  reduce using rule 61 (assignment)


State 173

   62 assignment: unary AND_ASSIGN assignment .

    $default  reduce using rule 62 (assignment)


State 174

   63 assignment: unary XOR_ASSIGN assignment .

    $default  reduce using rule 63 (assignment)


State 175

   64 assignment: unary OR_ASSIGN assignment .

    $default  reduce using rule 64 (assignment)


State 176

   65 assignment: unary SHL_ASSIGN assignment .

    $default  reduce using rule 65 (assignment)


State 177

   66 assignment: unary SHR_ASSIGN assignment .

    $default  reduce using rule 66 (assignment)


State 178

   56 assignment: unary '=' assignment .

    $default  reduce using rule 56 (assignment)


State 179

  106 postfix: postfix '(' ')' .

    $default  reduce using rule 106 (postfix)


State 180

  111 args: expr .

    $default  reduce using rule 111 (args)


State 181

  105 postfix: postfix '(' args . ')'
  112 args: args . ',' expr

    ')'  shift, and go to state 192
    ','  shift, and go to state 193


State 182

  104 postfix: postfix '[' expr . ']'

    ']'  shift, and go to state 194


State 183

  107 postfix: postfix '.' IDENTIFIER .

    $default  reduce using rule 107 (postfix)


State 184

  114 init_args: init_args ',' . init_arg

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 137
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73
    init_arg     go to state 195


State 185

   52 init: '{' init_args '}' .

    $default  reduce using rule 52 (init)


State 186

   30 selection_stmt: IF '(' expr ')' . stmt
   31               | IF '(' expr ')' . stmt ELSE stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 196
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 187

   38 iteration_stmt: FOR '(' ';' ';' . expr ')' stmt
   39               | FOR '(' ';' ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ')'         shift, and go to state 197
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 198
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 188

   36 iteration_stmt: FOR '(' ';' expr . ';' expr ')' stmt
   37               | FOR '(' ';' expr . ';' ')' stmt

    ';'  shift, and go to state 199


State 189

   32 iteration_stmt: FOR '(' expr ';' . expr ';' expr ')' stmt
   33               | FOR '(' expr ';' . expr ';' ')' stmt
   34               | FOR '(' expr ';' . ';' expr ')' stmt
   35               | FOR '(' expr ';' . ';' ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ';'         shift, and go to state 200
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 201
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 190

   54 expr: READ '(' expr ')' .

    $default  reduce using rule 54 (expr)


State 191

   40 while_stmt: WHILE '(' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 202
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 192

  105 postfix: postfix '(' args ')' .

    $default  reduce using rule 105 (postfix)


State 193

  112 args: args ',' . expr

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 203
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 194

  104 postfix: postfix '[' expr ']' .

    $default  reduce using rule 104 (postfix)


State 195

  114 init_args: init_args ',' init_arg .

    $default  reduce using rule 114 (init_args)


State 196

   30 selection_stmt: IF '(' expr ')' stmt .
   31               | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 204

    ELSE      [reduce using rule 30 (selection_stmt)]
    $default  reduce using rule 30 (selection_stmt)


State 197

   39 iteration_stmt: FOR '(' ';' ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 205
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 198

   38 iteration_stmt: FOR '(' ';' ';' expr . ')' stmt

    ')'  shift, and go to state 206


State 199

   36 iteration_stmt: FOR '(' ';' expr ';' . expr ')' stmt
   37               | FOR '(' ';' expr ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ')'         shift, and go to state 207
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 208
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 200

   34 iteration_stmt: FOR '(' expr ';' ';' . expr ')' stmt
   35               | FOR '(' expr ';' ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ')'         shift, and go to state 209
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 210
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 201

   32 iteration_stmt: FOR '(' expr ';' expr . ';' expr ')' stmt
   33               | FOR '(' expr ';' expr . ';' ')' stmt

    ';'  shift, and go to state 211


State 202

   40 while_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 40 (while_stmt)


State 203

  112 args: args ',' expr .

    $default  reduce using rule 112 (args)


State 204

   31 selection_stmt: IF '(' expr ')' stmt ELSE . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 212
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 205

   39 iteration_stmt: FOR '(' ';' ';' ')' stmt .

    $default  reduce using rule 39 (iteration_stmt)


State 206

   38 iteration_stmt: FOR '(' ';' ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 213
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 207

   37 iteration_stmt: FOR '(' ';' expr ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 214
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 208

   36 iteration_stmt: FOR '(' ';' expr ';' expr . ')' stmt

    ')'  shift, and go to state 215


State 209

   35 iteration_stmt: FOR '(' expr ';' ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 216
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 210

   34 iteration_stmt: FOR '(' expr ';' ';' expr . ')' stmt

    ')'  shift, and go to state 217


State 211

   32 iteration_stmt: FOR '(' expr ';' expr ';' . expr ')' stmt
   33               | FOR '(' expr ';' expr ';' . ')' stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    READ        shift, and go to state 42
    '('         shift, and go to state 44
    ')'         shift, and go to state 218
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    expr         go to state 219
    assignment   go to state 60
    logical_or   go to state 61
    logical_and  go to state 62
    bit_or       go to state 63
    bit_xor      go to state 64
    bit_and      go to state 65
    equality     go to state 66
    relational   go to state 67
    shift        go to state 68
    additive     go to state 69
    multi        go to state 70
    unary        go to state 71
    postfix      go to state 72
    primary      go to state 73


State 212

   31 selection_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 31 (selection_stmt)


State 213

   38 iteration_stmt: FOR '(' ';' ';' expr ')' stmt .

    $default  reduce using rule 38 (iteration_stmt)


State 214

   37 iteration_stmt: FOR '(' ';' expr ';' ')' stmt .

    $default  reduce using rule 37 (iteration_stmt)


State 215

   36 iteration_stmt: FOR '(' ';' expr ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 220
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 216

   35 iteration_stmt: FOR '(' expr ';' ';' ')' stmt .

    $default  reduce using rule 35 (iteration_stmt)


State 217

   34 iteration_stmt: FOR '(' expr ';' ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 221
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 218

   33 iteration_stmt: FOR '(' expr ';' expr ';' ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 222
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 219

   32 iteration_stmt: FOR '(' expr ';' expr ';' expr . ')' stmt

    ')'  shift, and go to state 223


State 220

   36 iteration_stmt: FOR '(' ';' expr ';' expr ')' stmt .

    $default  reduce using rule 36 (iteration_stmt)


State 221

   34 iteration_stmt: FOR '(' expr ';' ';' expr ')' stmt .

    $default  reduce using rule 34 (iteration_stmt)


State 222

   33 iteration_stmt: FOR '(' expr ';' expr ';' ')' stmt .

    $default  reduce using rule 33 (iteration_stmt)


State 223

   32 iteration_stmt: FOR '(' expr ';' expr ';' expr ')' . stmt

    INC_OP      shift, and go to state 32
    DEC_OP      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    CONSTANT    shift, and go to state 35
    IF          shift, and go to state 37
    FOR         shift, and go to state 38
    CONTINUE    shift, and go to state 39
    BREAK       shift, and go to state 40
    RETURN      shift, and go to state 41
    READ        shift, and go to state 42
    WHILE       shift, and go to state 43
    '('         shift, and go to state 44
    '{'         shift, and go to state 19
    ';'         shift, and go to state 20
    '-'         shift, and go to state 46
    '!'         shift, and go to state 47
    '~'         shift, and go to state 48

    stmt            go to state 224
    compound_stmt   go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    while_stmt      go to state 55
    jump_stmt       go to state 56
    expr            go to state 59
    assignment      go to state 60
    logical_or      go to state 61
    logical_and     go to state 62
    bit_or          go to state 63
    bit_xor         go to state 64
    bit_and         go to state 65
    equality        go to state 66
    relational      go to state 67
    shift           go to state 68
    additive        go to state 69
    multi           go to state 70
    unary           go to state 71
    postfix         go to state 72
    primary         go to state 73


State 224

   32 iteration_stmt: FOR '(' expr ';' expr ';' expr ')' stmt .

    $default  reduce using rule 32 (iteration_stmt)
